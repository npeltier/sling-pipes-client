{
  "jcr:primaryType":"nt:unstructured",
  "base":{
    "jcr:primaryType":"nt:unstructured",
    "sling:resourceType":"sling/pipes-client/mapping",
    "pipeType":"slingPipes/base",
    "jcr:description":"Output resource is Input resource",
    "args":["path"],
    "name":"Base"
  },
  "$":{
    "jcr:primaryType":"nt:unstructured",
    "sling:resourceType":"sling/pipes-client/mapping",
    "pipeType":"slingPipes/slingQuery",
    "jcr:description":"Output resources out of sling query execution of input.children(expr)",
    "name":"SlingQuery",
    "args":["path","expr"]
  },
  "json": {
    "jcr:primaryType": "nt:unstructured",
    "sling:resourceType":"sling/pipes-client/mapping",
    "pipeType":"slingPipes/Json",
    "jcr:description":"Output binding is either expr json object, either each item of the json array. Output resource is 1 or N times the input resource",
    "args":["expr"],
    "name":"Json"
  },
  "mp":{
    "jcr:primaryType":"nt:unstructured",
    "sling:resourceType":"sling/pipes-client/mapping",
    "pipeType":"slingPipes/multiProperty",
    "jcr:description":"Output binding is each value of the input's multi value property. Output resources is N times the input resource",
    "args":["path"],
    "name":"Multiple Value Property"
  },
  "find":{
    "jcr:primaryType":"nt:unstructured",
    "sling:resourceType":"sling/pipes-client/mapping",
    "pipeType":"slingPipes/xpath",
    "jcr:description":"Output resources out of xpath query given as expression",
    "args":["expr"],
    "name":"Xpath"
  },
  "auth":{
    "jcr:primaryType":"nt:unstructured",
    "sling:resourceType":"sling/pipes-client/mapping",
    "pipeType":"slingPipes/autorizable",
    "jcr:description":"Outputs authorizable resource based on id of user in expression. Can add member and/or add members to the output bindings if resource is a group if resource is a group, add to a group if resource is a user",
    "name":"Autorizable"
  },
  "parent":{
    "jcr:primaryType":"nt:unstructured",
    "sling:resourceType":"sling/pipes-client/mapping",
    "pipeType":"slingPipes/parent",
    "jcr:description":"Outputs input's parent resource",
    "name":"Parent"
  },
  "grep":{
    "jcr:primaryType":"nt:unstructured",
    "sling:resourceType":"sling/pipes-client/mapping",
    "pipeType":"slingPipes/filter",
    "jcr:description":"Ouptputs input if the filter conf matches the input. Result can be inverted with <strong>slingPipesFilter_not</strong> flag",
    "name":"Filter",
    "args":"conf"
  },
  "container":{
    "jcr:primaryType":"nt:unstructured",
    "sling:resourceType":"sling/pipes-client/mapping",
    "pipeType":"slingPipes/container",
    "jcr:description":"Container pipe, executes configured sub pipes",
    "name":"Container"
  },
  "ref":{
    "jcr:primaryType":"nt:unstructured",
    "sling:resourceType":"sling/pipes-client/mapping",
    "pipeType":"slingPipes/reference",
    "jcr:description":"Executes referred pipe in expression",
    "name":"Reference",
    "args":"ref"
  },
  "not":{
    "jcr:primaryType":"nt:unstructured",
    "sling:resourceType":"sling/pipes-client/mapping",
    "jcr:description":"Cut the flow if referred pipe has an output, let it pass if it hasn't",
    "pipeType":"slingPipes/not",
    "name":"Not",
    "args":"ref"
  },
  "write":{
    "jcr:primaryType":"nt:unstructured",
    "sling:resourceType":"sling/pipes-client/mapping",
    "jcr:description":"write configured resources under conf node",
    "pipeType":"slingPipes/write",
    "name":"Write",
    "args":"conf"
  },
  "mv":{
    "jcr:primaryType":"nt:unstructured",
    "sling:resourceType":"sling/pipes-client/mapping",
    "pipeType":"slingPipes/mv",
    "args":["path","expr"],
    "name":"Move"
  },
  "rm":{
    "jcr:primaryType":"nt:unstructured",
    "sling:resourceType":"sling/pipes-client/mapping",
    "pipeType":"slingPipes/rm",
    "name":"Remove",
    "args":["path"]
  },
  "path":{
    "jcr:primaryType":"nt:unstructured",
    "sling:resourceType":"sling/pipes-client/mapping",
    "pipeType":"slingPipes/path",
    "args":["expr"],
    "name":"Path"
  }
}